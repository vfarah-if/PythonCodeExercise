@startuml aws-credentials-flow

title AWS Credentials Automation Flow\nSSO Authentication and Credential Retrieval

start

:User runs setup-environment aws-credentials;

:Load .env configuration;
if (.env exists?) then (no)
    :Show configuration help;
    :Suggest running make aws-creds-init;
    stop
endif

:Parse SSO configuration;
note right
    AWS_SSO_START_URL
    AWS_SSO_REGION
    AWS_DEFAULT_REGION
end note

:Load aws_accounts.yaml;
if (Account config exists?) then (no)
    :Show example configuration;
    :Exit with error;
    stop
endif

:Parse available accounts;

if (--account parameter?) then (yes)
    :Find specified account;
    if (Account found?) then (no)
        :Show available accounts;
        :Exit with error;
        stop
    endif
else (no)
    :Look for default account;
    if (Default account exists?) then (yes)
        :Use default account;
    else (no)
        :Display account selection menu;
        :Prompt user for choice;
        if (Valid selection?) then (no)
            :Show error message;
            stop
        endif
    endif
endif

:Selected account confirmed;

partition "SSO Authentication" {
    :Create SSO client (boto3);
    
    :Authenticate with AWS SSO;
    if (SSO authentication successful?) then (no)
        if (Browser fallback enabled?) then (yes)
            :Launch browser automation;
            :Navigate to SSO portal;
            :Automate credential extraction;
            if (Browser automation successful?) then (no)
                :Show manual instructions;
                :Display SSO portal URL;
                :Exit with manual steps;
                stop
            endif
        else (no)
            :Show authentication error;
            :Provide troubleshooting tips;
            stop
        endif
    endif
    
    :Get SSO session token;
    
    :Check token expiration;
    if (Token expired?) then (yes)
        :Refresh SSO session;
        if (Refresh successful?) then (no)
            :Re-authenticate required;
            :Show re-authentication message;
            stop
        endif
    endif
}

partition "Credential Retrieval" {
    :Get role credentials for account;
    
    :Extract temporary credentials;
    note right
        ‚Ä¢ AWS_ACCESS_KEY_ID
        ‚Ä¢ AWS_SECRET_ACCESS_KEY  
        ‚Ä¢ AWS_SESSION_TOKEN
        ‚Ä¢ Expiration timestamp
    end note
    
    :Validate credential format;
    if (Valid AWS credential format?) then (no)
        :Log validation error;
        :Show error message;
        stop
    endif
    
    :Test credentials with AWS API;
    if (Credentials valid?) then (yes)
        :Show ‚úÖ Validation successful;
    else (no)
        :Show ‚ö†Ô∏è Validation warning;
        note right: Continue anyway - may work for target services
    endif
}

partition "Output Generation" {
    :Determine output format;
    note right
        Supported formats:
        ‚Ä¢ bash/zsh (export)
        ‚Ä¢ fish (set -x)
        ‚Ä¢ powershell ($env:)
        ‚Ä¢ aws-config file format
    end note
    
    switch (Output format?)
    case (bash/zsh)
        :Generate export commands;
    case (fish)
        :Generate set -x commands;
    case (powershell)
        :Generate $env: commands;
    case (aws-config)
        :Generate [profile] format;
    endswitch
    
    if (--output-file specified?) then (yes)
        :Write credentials to file;
        :Set file permissions (0600);
        :Show üíæ Saved to file message;
    else (no)
        :Display credentials to stdout;
    endif
}

:Show credential summary;
note right
    ‚úì Account: production
    ‚úì Valid for: 11 hours 45 minutes
    ‚úì Region: eu-west-2
end note

:Display usage instructions;

stop

note left
    **Configuration Files**
    
    **.env (SSO Settings):**
    AWS_SSO_START_URL=https://company.awsapps.com/start/#
    AWS_SSO_REGION=eu-west-2
    AWS_DEFAULT_REGION=eu-west-2
    
    **aws_accounts.yaml:**
    accounts:
      - name: production
        account_id: "123456789012"
        email: aws-admin@company.com
        role: Engineer
        default: true
    
    **Security Features**
    ‚Ä¢ Credential masking in logs
    ‚Ä¢ Temporary credentials only
    ‚Ä¢ Format validation (ASIA*/AKIA*)
    ‚Ä¢ File permissions (0600)
    ‚Ä¢ No persistent storage
    
    **Error Handling**
    ‚Ä¢ Graceful SSO failures
    ‚Ä¢ Browser automation fallback
    ‚Ä¢ Clear error messages
    ‚Ä¢ Manual instruction guidance
    ‚Ä¢ Configuration validation
    
    **Usage Examples**
    
    # Interactive selection
    make aws-credentials
    
    # Specific account
    setup-environment aws-credentials --account prod
    
    # Different shell format
    setup-environment aws-credentials --export-format fish
    
    # Save to file
    setup-environment aws-credentials --output-file ~/.aws/creds
    
    # Use credentials immediately
    eval $(setup-environment aws-credentials --account dev)
end note

@enduml