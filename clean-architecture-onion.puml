@startuml clean-architecture-onion

title CLEAN ARCHITECTURE\nSetup Environment System

skinparam backgroundColor white

' Define the concentric layers using packages with circular style
skinparam package {
    Style rectangle
    BackgroundColor white
    BorderColor black
}

' Infrastructure Layer (Outermost - Dark Blue)
package "Infrastructure" #2E5984 {
    [CLI Interface]
    [GitPythonService] 
    [BrewSoftwareService]
    [NPMRCFileService]
    [RepositoryConfigService]
    [PythonService]
    [NVMService]
}

' Application Layer (Use Cases - Medium Blue)  
package "Application Layer" #5B9BD5 {
    package "Use Cases" #4A90D9 {
        [SetupRepositories UseCase]
        [InstallSoftware UseCase] 
        [ConfigureNPMRC UseCase]
    }
    package "Interfaces (Ports)" #6BA6E3 {
        interface GitService
        interface SoftwareService  
        interface NPMRCService
        interface ConfigService
    }
}

' Domain Layer (Light Blue)
package "Domain Layer" #9BC2E6 {
    package "Entities" #B8D4F0 {
        [Repository]
        [Software]
        [NPMRCConfiguration]  
    }
    package "Value Objects" #B8D4F0 {
        [DevFolderPath]
        [PersonalAccessToken]
        [InstallResponse]
    }
}

' External Systems
cloud "External Systems" {
    [User]
    [File System]
    [Homebrew CLI]
    [Git CLI] 
    [GitHub API]
    [YAML Files]
    [SSH Agent]
}

' Connections - Dependencies point inward
[User] --> [CLI Interface]
[CLI Interface] --> [SetupRepositories UseCase]
[CLI Interface] --> [InstallSoftware UseCase]
[CLI Interface] --> [ConfigureNPMRC UseCase]

[SetupRepositories UseCase] --> GitService
[InstallSoftware UseCase] --> SoftwareService
[ConfigureNPMRC UseCase] --> NPMRCService
[SetupRepositories UseCase] --> ConfigService

GitService <|.. [GitPythonService]
SoftwareService <|.. [BrewSoftwareService] 
NPMRCService <|.. [NPMRCFileService]
ConfigService <|.. [RepositoryConfigService]

[GitPythonService] --> [Git CLI]
[GitPythonService] --> [File System]
[BrewSoftwareService] --> [Homebrew CLI]
[NPMRCFileService] --> [File System]
[RepositoryConfigService] --> [YAML Files]
[PythonService] --> [File System]

[SetupRepositories UseCase] ..> [Repository] : creates
[InstallSoftware UseCase] ..> [Software] : uses  
[ConfigureNPMRC UseCase] ..> [NPMRCConfiguration] : creates

[Repository] ..> [DevFolderPath] : uses
[NPMRCConfiguration] ..> [PersonalAccessToken] : contains

' Add architecture notes
note right of "Domain Layer"
    **Core Business Logic**
    • Framework Independent
    • No external dependencies
    • Contains business rules
    • Highly testable
end note

note left of "Infrastructure" 
    **External Concerns**
    • Framework specific code
    • I/O operations  
    • External API calls
    • Database access
    • File system operations
end note

note bottom of "Application Layer"
    **Application Business Rules**
    • Use case orchestration
    • Interface definitions (Ports)
    • Application-specific business rules
    • Coordinates domain objects
end note

@enduml